1) Создать ЕС2 и security group, при этом новый сервер должен содержать созданную security group.
provider "aws" {
  region = "us-east-1" 
}

resource "aws_security_group" "petrovich_hw13" {
  name        = "petrovich_hw13"
  description = "petrovich_hw13"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "petrovich_hw13" {
  ami           = "ami-0d7a109bf30624c99"  
  instance_type = "t3.micro"
  key_name      = "devops"  

  security_groups = [
    aws_security_group.petrovich_hw13.name
  ]
}


2) Создать новую VPC и в ней создать ЕС2 сервер. В аутпут вынести id созданного сервера.

provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "petrovich_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "petrovich_subnet" {
  vpc_id     = aws_vpc.petrovich_vpc.id
  cidr_block = "10.0.1.0/24"
}

resource "aws_security_group" "petrovich_security_group" {
  vpc_id = aws_vpc.petrovich_vpc.id

  // Определите правила безопасности по вашему усмотрению
}

resource "aws_instance" "petrovich_instance" {
  ami           = "ami-0d7a109bf30624c99"
  instance_type = "t3.micro"
  key_name      = "devops"

  subnet_id        = aws_subnet.petrovich_subnet.id
  security_groups  = [aws_security_group.petrovich_security_group.id]
}

output "instance_id" {
  value = aws_instance.petrovich_instance.id
}



